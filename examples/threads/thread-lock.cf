:v ~0 variable ^;

:work ^1 v +! 1- dup  'work ^if* ^drop ;

:th0 ^10000 work ;
:th1 ^10000 work ;
:th2 ^10000 work ;
:th3 ^10000 work ;
:th4 ^10000 work ;

~v ?
`th0 ~0 thread/run catch
`th1 ~1 thread/run catch
`th2 ~2 thread/run catch
`th3 ~3 thread/run catch
`th4 ~4 thread/run catch

thread/join-all

cr v ? cr
s" v is less than 50000 caused by parallel concurent access" prn


s" Should count exactly 50000 because access to v is protected by lock" nprn
:sem-work ^  1 v    0 thread/lock  +!   0 thread/unlock  1- dup 'sem-work ^if* ^drop ;

:th0 ^10000 sem-work ;
:th1 ^10000 sem-work ;
:th2 ^10000 sem-work ;
:th3 ^10000 sem-work ;
:th4 ^10000 sem-work ;

~0 v !  v ?
`th0 ~0 thread/run catch
`th1 ~1 thread/run catch
`th2 ~2 thread/run catch
`th3 ~3 thread/run catch
`th4 ~4 thread/run catch

thread/join-all

v ? cr

~0 v !  v ?

`th0 ~0 thread/run catch
`th1 ~1 thread/run catch
`th2 ~2 thread/run catch
`th3 ~3 thread/run catch
`th4 ~4 thread/run catch

thread/join-all

v ? cr

bye
